library(readr)
data <- read_csv("Documents/CS5052Practical/data.csv")
View(data)
plot(Inputs~ResponseTime, data=data)
plot(Inputs~ResponseTimes, data=data)
lm(ResponseTimes ~ Inputs, data=data)
mod <- lm(ResponseTimes ~ Inputs, data=data)
summary(mod)
plot(mod)
library(readr)
moreolddata <- read_csv("Documents/CS5052Practical/moreolddata.csv")
View(moreolddata)
library(readr)
oldData <- read_csv("Documents/CS5052Practical/oldData.csv")
View(oldData)
library(readr)
oldData2 <- read_csv("Documents/CS5052Practical/oldData2.csv")
View(oldData2)
library(readr)
data <- read_csv("Documents/CS5052Practical/data.csv")
View(data)
data <- rbind(data, oldData2)
data <- rbind(data, moreolddata)
write_csv("data.csv", data)
write_csv(data, "data.csv")
getwd()
setwd("~/Documents/CS5052Practical")
write_csv(data, "data.csv")
data$MachineType <- as.factor(data$MachineType)
str(data)
unique(data$PriceHourlyPerNode)
for (i in 1:nrow(data)) {
data[i, 'PriceHourlyPerNode'] <- switch(data[i, 'MachineType'], 'f1-micro'=0.0086,
"g1-small"= 0.0285,
"n1-standard-1"= 0.0523,
"n1-standard-2"= 0.1046,
"n1-standard-8"= 0.4184,
"n1-standard-16"= 0.8368,
"n1-standard-32"= 1.6736,
"n1-standard-64"= 3.3472,
"n1-standard-96"= 5.0280,
"n1-highcpu-2"= 0.078,
"n1-highcpu-8"= 0.312)
}
data[i, 'MachineType']
data <- data.frame(data)
data[i, 'MachineType']
for (i in 1:nrow(data)) {
data[i, 'PriceHourlyPerNode'] <- switch(data[i, 'MachineType'], 'f1-micro'=0.0086,
"g1-small"= 0.0285,
"n1-standard-1"= 0.0523,
"n1-standard-2"= 0.1046,
"n1-standard-8"= 0.4184,
"n1-standard-16"= 0.8368,
"n1-standard-32"= 1.6736,
"n1-standard-64"= 3.3472,
"n1-standard-96"= 5.0280,
"n1-highcpu-2"= 0.078,
"n1-highcpu-8"= 0.312)
}
warnings()
data <- read_csv("data.csv")
data <- data.frame(data)
for (i in 1:nrow(data)) {
data[i, 'PriceHourlyPerNode'] <- switch(data[i, 'MachineType'], 'f1-micro'=0.0086,
"g1-small"= 0.0285,
"n1-standard-1"= 0.0523,
"n1-standard-2"= 0.1046,
"n1-standard-8"= 0.4184,
"n1-standard-16"= 0.8368,
"n1-standard-32"= 1.6736,
"n1-standard-64"= 3.3472,
"n1-standard-96"= 5.0280,
"n1-highcpu-2"= 0.078,
"n1-highcpu-8"= 0.312)
}
data$MachineType <- as.factor(data$MachineType)
data$PriceHourly <- data$PriceHourlyPerNode * data$NodeCount
write_csv(data, "data.csv")
plot(ResponseTimes~Inputs, data=data)
library(ggplot2)
install.packages("ggplot2")
ggplot(data, aes(x=Inputs, y=ResponseTimes)) + geom_point() + facet_wrap(~MachineType)
library(ggplot2)
ggplot(data, aes(x=Inputs, y=ResponseTimes)) + geom_point() + facet_wrap(~MachineType)
data$MachineType <- factor(data$MachineType, levels=c("f1-micro", "g1-small", "n1-standard-1", "n1-standard-2", "n1-highcpu-2", "n1-highcpu-8"))
datat$MachineType
data$MachineType
ggplot(data, aes(x=Inputs, y=ResponseTimes)) + geom_point() + facet_wrap(~MachineType)
ggplot(data, aes(x=Inputs, y=ResponseTimes)) + geom_point() + geom_smooth() + facet_wrap(~MachineType)
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth() + facet_wrap(~MachineType)
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~MachineType)
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~MachineType) + labs(title="Sqrt Response Time by Input n on different machine types")
data$CPUPerNode <- strtoi(substr(data$MachineType, nchar(data$MachineType)-1, 1000))
data$CPUPerNode <- apply(data, 1, function(x) return(strtoi(substr(x[4], nchar(x[4])-1))))
data$CPUPerNode <- apply(data, 1, function(x) return(strtoi(substr(x[4], nchar(x[4])-1, 1000))))
View(data)
data$CPUPerNode <- apply(data, 1, function(x) return(strtoi(substr(x[4], nchar(x[4]), 1000))))
data$CPUs <- data$NodeCount * data$CPUPerNode
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~CPUs) + labs(title="Sqrt Response Time by Input n on different machine types")
for (i in 1:nrow(data)) {
if (data[i, 'MachineType'] == f1-micro) {
data[i, "CPUPerNode"] <- 0.2
}
if (data[i, 'MachineType'] == 'g1-small') {
data[i, "CPUPerNode"] <- 0.5
}
if (data[i, 'MachineType'] == 'f1-micro') {
data[i, "CPUPerNode"] <- 0.2
}
}
for (i in 1:nrow(data)) {
if (data[i, 'MachineType'] == 'f1-micro') {
data[i, "CPUPerNode"] <- 0.2
}
if (data[i, 'MachineType'] == 'g1-small') {
data[i, "CPUPerNode"] <- 0.5
}
}
data$CPUs <- data$NodeCount * data$CPUPerNode
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~CPUs) + labs(title="Sqrt Response Time by Input n on different machine types")
data$NumberAndMachine <- paste(data$NodeCount, " ", data$MachineType, "'s", sep="")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~CPUs) + labs(title="Sqrt Response Time by Input n on different overall vCPU #")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine config")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point() + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes), fill=CPUs)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(fill=CPUs)) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes), colour=CPUs)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=CPUs)) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=CPUs)) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations") + scale_color_discrete()
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=as.factor(CPUs))) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
data$NumberAndMachine <- factor(data$NumberAndMachine, levels=c("3 f1-micro's", "6 f1-micro's", "3 g1-small's", "8 f1-micro's", "6 g1-small's", "3 n1-standard-1's", "8 g1-small's", "6 n1-standard-1's", "3 n1-standard-2's", "3 n1-highcpu-2's", "8 n1-standard-1's", "6 n1-standard-2's", "6 n1-highcpu-2's", "8 n1-standard-2's", "8 n1-highcpu-2's", "2 n1-highcpu-8's"))
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=as.factor(CPUs))) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=as.factor(CPUs))) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations") + theme(legend.title="vCPUs")
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=as.factor(CPUs))) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations") + theme(legend.title=element.text("vCPUs"))
ggplot(data, aes(x=Inputs, y=sqrt(ResponseTimes))) + geom_point(aes(colour=as.factor(CPUs))) + geom_smooth(method="lm") + facet_wrap(~NumberAndMachine) + labs(title="Sqrt Response Time by Input n on different machine configurations", colour="vCPUs")
mod <- lm(sqrt(ResponseTimes) ~ Inputs + CPUs)
mod <- lm(sqrt(ResponseTimes) ~ Inputs + CPUs, data=data)
summary(mod)
plot(mod)
hist(mod$residuals)
install.packages("car")
car::Anova(mod)
anova(mod)
mod2 <- lm(sqrt(ResponseTimes ~ Inputs + NumNodes + MachineType))
mod2 <- lm(sqrt(ResponseTimes ~ Inputs + NumNodes + MachineType, data=data))
mod2 <- lm(sqrt(ResponseTimes) ~ Inputs + NumNodes + MachineType, data=data))
mod2 <- lm(sqrt(ResponseTimes) ~ Inputs + NumNodes + MachineType, data=data)
mod2 <- lm(sqrt(ResponseTimes) ~ Inputs + NodeCount + MachineType, data=data)
summary(mod2)
anova(mod2)
step(mod2)
plot(mod2)
mod2 <- lm(sqrt(ResponseTimes) ~ Inputs*NodeCount*MachineType, data=data)
summary(mod2)
step(mod2)
write_csv(data, "data.csv")
